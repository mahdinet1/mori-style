// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.2
// 	protoc        v3.12.4
// source: embedder.proto

package __

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// The request message containing the user's name.
type TextToVectorRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Query string `protobuf:"bytes,1,opt,name=query,proto3" json:"query,omitempty"`
}

func (x *TextToVectorRequest) Reset() {
	*x = TextToVectorRequest{}
	mi := &file_embedder_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TextToVectorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TextToVectorRequest) ProtoMessage() {}

func (x *TextToVectorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_embedder_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TextToVectorRequest.ProtoReflect.Descriptor instead.
func (*TextToVectorRequest) Descriptor() ([]byte, []int) {
	return file_embedder_proto_rawDescGZIP(), []int{0}
}

func (x *TextToVectorRequest) GetQuery() string {
	if x != nil {
		return x.Query
	}
	return ""
}

// The response message containing the greetings
type TextToVectorReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vector []float32 `protobuf:"fixed32,1,rep,packed,name=vector,proto3" json:"vector,omitempty"`
}

func (x *TextToVectorReply) Reset() {
	*x = TextToVectorReply{}
	mi := &file_embedder_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *TextToVectorReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*TextToVectorReply) ProtoMessage() {}

func (x *TextToVectorReply) ProtoReflect() protoreflect.Message {
	mi := &file_embedder_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use TextToVectorReply.ProtoReflect.Descriptor instead.
func (*TextToVectorReply) Descriptor() ([]byte, []int) {
	return file_embedder_proto_rawDescGZIP(), []int{1}
}

func (x *TextToVectorReply) GetVector() []float32 {
	if x != nil {
		return x.Vector
	}
	return nil
}

type ImageVectorRequest struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ImageUrl []string `protobuf:"bytes,1,rep,name=image_url,json=imageUrl,proto3" json:"image_url,omitempty"`
}

func (x *ImageVectorRequest) Reset() {
	*x = ImageVectorRequest{}
	mi := &file_embedder_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ImageVectorRequest) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImageVectorRequest) ProtoMessage() {}

func (x *ImageVectorRequest) ProtoReflect() protoreflect.Message {
	mi := &file_embedder_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImageVectorRequest.ProtoReflect.Descriptor instead.
func (*ImageVectorRequest) Descriptor() ([]byte, []int) {
	return file_embedder_proto_rawDescGZIP(), []int{2}
}

func (x *ImageVectorRequest) GetImageUrl() []string {
	if x != nil {
		return x.ImageUrl
	}
	return nil
}

type ImageVectorReply struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vectors []*Vector `protobuf:"bytes,1,rep,name=vectors,proto3" json:"vectors,omitempty"`
}

func (x *ImageVectorReply) Reset() {
	*x = ImageVectorReply{}
	mi := &file_embedder_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ImageVectorReply) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ImageVectorReply) ProtoMessage() {}

func (x *ImageVectorReply) ProtoReflect() protoreflect.Message {
	mi := &file_embedder_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ImageVectorReply.ProtoReflect.Descriptor instead.
func (*ImageVectorReply) Descriptor() ([]byte, []int) {
	return file_embedder_proto_rawDescGZIP(), []int{3}
}

func (x *ImageVectorReply) GetVectors() []*Vector {
	if x != nil {
		return x.Vectors
	}
	return nil
}

type Vector struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Vector []float32 `protobuf:"fixed32,1,rep,packed,name=vector,proto3" json:"vector,omitempty"`
}

func (x *Vector) Reset() {
	*x = Vector{}
	mi := &file_embedder_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *Vector) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*Vector) ProtoMessage() {}

func (x *Vector) ProtoReflect() protoreflect.Message {
	mi := &file_embedder_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use Vector.ProtoReflect.Descriptor instead.
func (*Vector) Descriptor() ([]byte, []int) {
	return file_embedder_proto_rawDescGZIP(), []int{4}
}

func (x *Vector) GetVector() []float32 {
	if x != nil {
		return x.Vector
	}
	return nil
}

var File_embedder_proto protoreflect.FileDescriptor

var file_embedder_proto_rawDesc = []byte{
	0x0a, 0x0e, 0x65, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x65, 0x72, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x12, 0x08, 0x65, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x65, 0x72, 0x22, 0x2b, 0x0a, 0x13, 0x54, 0x65,
	0x78, 0x74, 0x54, 0x6f, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73,
	0x74, 0x12, 0x14, 0x0a, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x05, 0x71, 0x75, 0x65, 0x72, 0x79, 0x22, 0x2b, 0x0a, 0x11, 0x54, 0x65, 0x78, 0x74, 0x54,
	0x6f, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x16, 0x0a, 0x06,
	0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x03, 0x28, 0x02, 0x52, 0x06, 0x76, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x22, 0x31, 0x0a, 0x12, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x56, 0x65, 0x63,
	0x74, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x12, 0x1b, 0x0a, 0x09, 0x69, 0x6d,
	0x61, 0x67, 0x65, 0x5f, 0x75, 0x72, 0x6c, 0x18, 0x01, 0x20, 0x03, 0x28, 0x09, 0x52, 0x08, 0x69,
	0x6d, 0x61, 0x67, 0x65, 0x55, 0x72, 0x6c, 0x22, 0x3e, 0x0a, 0x10, 0x49, 0x6d, 0x61, 0x67, 0x65,
	0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x12, 0x2a, 0x0a, 0x07, 0x76,
	0x65, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x10, 0x2e, 0x65,
	0x6d, 0x62, 0x65, 0x64, 0x64, 0x65, 0x72, 0x2e, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x52, 0x07,
	0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x73, 0x22, 0x20, 0x0a, 0x06, 0x56, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x12, 0x16, 0x0a, 0x06, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x18, 0x01, 0x20, 0x03, 0x28,
	0x02, 0x52, 0x06, 0x76, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x32, 0xad, 0x01, 0x0a, 0x08, 0x45, 0x6d,
	0x62, 0x65, 0x64, 0x64, 0x65, 0x72, 0x12, 0x50, 0x0a, 0x10, 0x52, 0x65, 0x74, 0x75, 0x72, 0x6e,
	0x54, 0x65, 0x78, 0x74, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x1d, 0x2e, 0x65, 0x6d, 0x62,
	0x65, 0x64, 0x64, 0x65, 0x72, 0x2e, 0x54, 0x65, 0x78, 0x74, 0x54, 0x6f, 0x56, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1b, 0x2e, 0x65, 0x6d, 0x62, 0x65,
	0x64, 0x64, 0x65, 0x72, 0x2e, 0x54, 0x65, 0x78, 0x74, 0x54, 0x6f, 0x56, 0x65, 0x63, 0x74, 0x6f,
	0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x12, 0x4f, 0x0a, 0x11, 0x52, 0x65, 0x74, 0x75,
	0x72, 0x6e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x56, 0x65, 0x63, 0x74, 0x6f, 0x72, 0x12, 0x1c, 0x2e,
	0x65, 0x6d, 0x62, 0x65, 0x64, 0x64, 0x65, 0x72, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x56, 0x65,
	0x63, 0x74, 0x6f, 0x72, 0x52, 0x65, 0x71, 0x75, 0x65, 0x73, 0x74, 0x1a, 0x1a, 0x2e, 0x65, 0x6d,
	0x62, 0x65, 0x64, 0x64, 0x65, 0x72, 0x2e, 0x49, 0x6d, 0x61, 0x67, 0x65, 0x56, 0x65, 0x63, 0x74,
	0x6f, 0x72, 0x52, 0x65, 0x70, 0x6c, 0x79, 0x22, 0x00, 0x42, 0x04, 0x5a, 0x02, 0x2e, 0x2f, 0x62,
	0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_embedder_proto_rawDescOnce sync.Once
	file_embedder_proto_rawDescData = file_embedder_proto_rawDesc
)

func file_embedder_proto_rawDescGZIP() []byte {
	file_embedder_proto_rawDescOnce.Do(func() {
		file_embedder_proto_rawDescData = protoimpl.X.CompressGZIP(file_embedder_proto_rawDescData)
	})
	return file_embedder_proto_rawDescData
}

var file_embedder_proto_msgTypes = make([]protoimpl.MessageInfo, 5)
var file_embedder_proto_goTypes = []any{
	(*TextToVectorRequest)(nil), // 0: embedder.TextToVectorRequest
	(*TextToVectorReply)(nil),   // 1: embedder.TextToVectorReply
	(*ImageVectorRequest)(nil),  // 2: embedder.ImageVectorRequest
	(*ImageVectorReply)(nil),    // 3: embedder.ImageVectorReply
	(*Vector)(nil),              // 4: embedder.Vector
}
var file_embedder_proto_depIdxs = []int32{
	4, // 0: embedder.ImageVectorReply.vectors:type_name -> embedder.Vector
	0, // 1: embedder.Embedder.ReturnTextVector:input_type -> embedder.TextToVectorRequest
	2, // 2: embedder.Embedder.ReturnImageVector:input_type -> embedder.ImageVectorRequest
	1, // 3: embedder.Embedder.ReturnTextVector:output_type -> embedder.TextToVectorReply
	3, // 4: embedder.Embedder.ReturnImageVector:output_type -> embedder.ImageVectorReply
	3, // [3:5] is the sub-list for method output_type
	1, // [1:3] is the sub-list for method input_type
	1, // [1:1] is the sub-list for extension type_name
	1, // [1:1] is the sub-list for extension extendee
	0, // [0:1] is the sub-list for field type_name
}

func init() { file_embedder_proto_init() }
func file_embedder_proto_init() {
	if File_embedder_proto != nil {
		return
	}
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_embedder_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   5,
			NumExtensions: 0,
			NumServices:   1,
		},
		GoTypes:           file_embedder_proto_goTypes,
		DependencyIndexes: file_embedder_proto_depIdxs,
		MessageInfos:      file_embedder_proto_msgTypes,
	}.Build()
	File_embedder_proto = out.File
	file_embedder_proto_rawDesc = nil
	file_embedder_proto_goTypes = nil
	file_embedder_proto_depIdxs = nil
}
